#!/usr/bin/bash
# Python virtual environment manager

# Check if script is being sourced
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    echo "Error: This script must be sourced rather than executed directly."
    exit 1
fi

homedir="$HOME"

# Functions
activate() {
    source "$homedir/envman/activate" "$1"
}

list_envs() {
    ls -d "$homedir"/* | awk -F/ '{print $(NF-1)}'
}

# Parse arguments
if [[ "$1" == "help" ]]; then
    echo "envman: python environment manager"
    echo "source envman activate -> activates an existing environment"
    echo "source envman create ... -> creates a new environment with given name"
    echo "source envman list -> list all existing environments"
elif [[ "$1" == "activate" ]]; then
    if [[ -n "$2" ]]; then
        activate "$2"
        clear
    else
        echo "Error: Environment name is missing."
    fi
elif [[ "$1" == "create" ]]; then
    if [[ -n "$2" ]]; then
        echo "Creating environment: $2"
        read -p "Are you sure you want to create: $2 -> [$homedir/envman/envs/$2] (y/n) " choice
        if [[ "$choice" == "y" ]]; then
            python -m venv "$homedir/envman/envs/$2"
            clear
        fi
    else
        echo "Error: Environment name is missing."
    fi
elif [[ "$1" == "scrap" ]]; then
    if [[ -n "$2" ]]; then
        echo "Scrapping environment: $2"
        read -p "Are you sure you want to delete: $2 -> [$homedir/envman/envs/$2] (y/n) " choice
        if [[ "$choice" == "y" ]]; then
            sudo rm -rf "$homedir/envman/envs/$2"
            clear
        fi
    else
        echo "Error: Environment name is missing."
    fi
elif [[ "$1" == "list" ]]; then
    echo "--- Environments ---"
    ls -d "$homedir/envman/envs"/* | awk -F/ '{print $(NF-1)}'
    echo "--- Environments ---"
fi
